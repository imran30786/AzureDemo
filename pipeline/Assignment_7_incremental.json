{
	"name": "Assignment_7_incremental",
	"properties": {
		"activities": [
			{
				"name": "LookupSQLWaterMark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select max(WatermarkValue) as oldWaterMarkvalue from [dbo].[watermarktable] where tablename = 'emp_source_table'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_Sql_Input",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "NewWaterMarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT max(LastModifytime) as newWaterMarkValue FROM [dbo].[emp_source_table]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Ds_SQL_Watermark_output",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy data from SQL to Lake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupSQLWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "NewWaterMarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from emp_source_table \nwhere \nLastModifytime > '@{activity('LookupSQLWaterMark').output.firstRow.oldWaterMarkvalue}' \nand \nLastModifytime <= '@{activity('NewWaterMarkValue').output.firstRow.NewWaterMarkvalue}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Ds_SQL_Watermark_output",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_incremental_Output",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "UpdateWaterMark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data from SQL to Lake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@{activity('NewWaterMarkValue').output.firstRow.NewWaterMarkvalue}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": "emp_source_table",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQl",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-03-25T10:44:07Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}