{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-AssignmentPractical"
		},
		"LS_AdlsGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AdlsGen2'"
		},
		"LS_SQl_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQl'"
		},
		"LS_AdlsGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stgmissionimran.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Assignment_1_Zip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Zip_input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_unzip_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-18T19:21:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Zip_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_unzip_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment_2_BulkLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List Table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TABLE_SCHEMA,TABLE_NAME from INFORMATION_SCHEMA.TABLES where TABLE_TYPE = 'BASE TABLE' and Table_Schema = 'SalesLT'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_Sql_Input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Table').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy All Table to Adls",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_SqlDynamicTable_Input",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sqlLoad_Output",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().TABLE_SCHEMA,'_',item().TABLE_NAME,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-18T20:08:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Sql_Input')]",
				"[concat(variables('factoryId'), '/datasets/ds_SqlDynamicTable_Input')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqlLoad_Output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment_3_Email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ds_input_copy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Ds_ouput_Copy",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "When PipeLine Failed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-21.centralindia.logic.azure.com:443/workflows/922a1dd56bf94f6a98acce7121af26e6/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=BH-10Kzs5xFr4Q11hhwZf7iaHT2qhttWHQSd612Pytw",
							"method": "POST",
							"headers": {},
							"body": {
								"AdfName": "df-AssignmentPractical",
								"PipelineName": "Assignment_3_Email",
								"Status": "Failed"
							}
						}
					},
					{
						"name": "When Pipeline Success",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-21.centralindia.logic.azure.com:443/workflows/922a1dd56bf94f6a98acce7121af26e6/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=BH-10Kzs5xFr4Q11hhwZf7iaHT2qhttWHQSd612Pytw",
							"method": "POST",
							"headers": {},
							"body": {
								"AdfName": "df-AssignmentPractical",
								"PipelineName": "Assignment_3_Email",
								"Status": "Success"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-19T18:46:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_input_copy')]",
				"[concat(variables('factoryId'), '/datasets/Ds_ouput_Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment_4_Sql_Query')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Create table Emp(empId int,Name nvarchar(10))\nselect 1 as abc",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_Sql_Input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T15:15:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Sql_Input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment_5_Alert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ds_input_copy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Ds_ouput_Copy",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-21T12:31:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_input_copy')]",
				"[concat(variables('factoryId'), '/datasets/Ds_ouput_Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment_6_SCD_Type_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SCD Type 1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SCD_TYPE_1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employee": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T20:36:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SCD_TYPE_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment_7_incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupSQLWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(WatermarkValue) as oldWaterMarkvalue from [dbo].[watermarktable] where tablename = 'emp_source_table'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_Sql_Input",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "NewWaterMarkValue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT max(LastModifytime) as newWaterMarkValue FROM [dbo].[emp_source_table]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ds_SQL_Watermark_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data from SQL to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupSQLWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NewWaterMarkValue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from emp_source_table \nwhere \nLastModifytime > '@{activity('LookupSQLWaterMark').output.firstRow.oldWaterMarkvalue}' \nand \nLastModifytime <= '@{activity('NewWaterMarkValue').output.firstRow.NewWaterMarkvalue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ds_SQL_Watermark_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_incremental_Output",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpdateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data from SQL to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('NewWaterMarkValue').output.firstRow.NewWaterMarkvalue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "emp_source_table",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQl",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-25T10:44:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Sql_Input')]",
				"[concat(variables('factoryId'), '/datasets/Ds_SQL_Watermark_output')]",
				"[concat(variables('factoryId'), '/datasets/DS_incremental_Output')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SQl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DemoPracticeGit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReplaceNullwith0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Replace Null using DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Replace_Null",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employee": {},
									"LoadFile": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-21T11:12:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Replace_Null')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Adls_Dynamic_Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "YEAR",
						"type": "String"
					},
					{
						"name": "MONTH",
						"type": "String"
					},
					{
						"name": "DAY",
						"type": "String"
					},
					{
						"name": "DAY_OF_WEEK",
						"type": "String"
					},
					{
						"name": "AIRLINE",
						"type": "String"
					},
					{
						"name": "FLIGHT_NUMBER",
						"type": "String"
					},
					{
						"name": "TAIL_NUMBER",
						"type": "String"
					},
					{
						"name": "ORIGIN_AIRPORT",
						"type": "String"
					},
					{
						"name": "DESTINATION_AIRPORT",
						"type": "String"
					},
					{
						"name": "SCHEDULED_DEPARTURE",
						"type": "String"
					},
					{
						"name": "DEPARTURE_TIME",
						"type": "String"
					},
					{
						"name": "DEPARTURE_DELAY",
						"type": "String"
					},
					{
						"name": "TAXI_OUT",
						"type": "String"
					},
					{
						"name": "WHEELS_OFF",
						"type": "String"
					},
					{
						"name": "SCHEDULED_TIME",
						"type": "String"
					},
					{
						"name": "ELAPSED_TIME",
						"type": "String"
					},
					{
						"name": "AIR_TIME",
						"type": "String"
					},
					{
						"name": "DISTANCE",
						"type": "String"
					},
					{
						"name": "WHEELS_ON",
						"type": "String"
					},
					{
						"name": "TAXI_IN",
						"type": "String"
					},
					{
						"name": "SCHEDULED_ARRIVAL",
						"type": "String"
					},
					{
						"name": "ARRIVAL_TIME",
						"type": "String"
					},
					{
						"name": "ARRIVAL_DELAY",
						"type": "String"
					},
					{
						"name": "DIVERTED",
						"type": "String"
					},
					{
						"name": "CANCELLED",
						"type": "String"
					},
					{
						"name": "CANCELLATION_REASON",
						"type": "String"
					},
					{
						"name": "AIR_SYSTEM_DELAY",
						"type": "String"
					},
					{
						"name": "SECURITY_DELAY",
						"type": "String"
					},
					{
						"name": "AIRLINE_DELAY",
						"type": "String"
					},
					{
						"name": "LATE_AIRCRAFT_DELAY",
						"type": "String"
					},
					{
						"name": "WEATHER_DELAY",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ScdType_Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ScdType1.txt",
						"folderPath": "SCD Type",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpId",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ScdType_SQL_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "Department",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_incremental_Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('Test_',pipeline().TriggerTime)",
							"type": "Expression"
						},
						"folderPath": "IncrementalLoad",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_single_multiple_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "single_Multiple.txt",
						"folderPath": "Practical",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "empname",
						"type": "String"
					},
					{
						"name": "skill",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Emp_Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employee.txt",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Job",
						"type": "String"
					},
					{
						"name": "salary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Practical_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Employee.txt",
						"folderPath": "Practical",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_SQL_Watermark_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "LastModifytime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp_source_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_input_copy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "emp.txt",
						"folderPath": "copy",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "empname",
						"type": "String"
					},
					{
						"name": "deptid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_ouput_Copy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ReplaceNull",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_SqlDynamicTable_Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQl",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableSchema": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().TableSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Sql_Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Zip_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "flights.zip",
						"folderPath": "Day15",
						"fileSystem": "input"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlLoad_Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "SqlTable",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_unzip_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AdlsGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Unzip",
						"fileSystem": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AdlsGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AdlsGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AdlsGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQl')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQl_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Merge_into_Single')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Ds_Practical_input",
								"type": "DatasetReference"
							},
							"name": "Employe"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ds_ouput_Copy",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "LS_AdlsGen2",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as short,",
						"          empname as string,",
						"          skill as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employe",
						"Employe aggregate(groupBy(empid,",
						"          empname),",
						"     skill = collect(skill)) ~> aggregate1",
						"aggregate1 derive(skill = replace(replace(replace(toString(skill),'[',''),']',''),'\"','')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['MergeSingle.txt'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_Practical_input')]",
				"[concat(variables('factoryId'), '/datasets/Ds_ouput_Copy')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Replace_Null')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Ds_Emp_Input",
								"type": "DatasetReference"
							},
							"name": "Employee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ds_ouput_Copy",
								"type": "DatasetReference"
							},
							"name": "LoadFile",
							"rejectedDataLinkedService": {
								"referenceName": "LS_AdlsGen2",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ReplaceNullWithValue"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Name as string,",
						"          Job as string,",
						"          salary as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employee",
						"Employee derive(salary = iif(isNull(toInteger(salary)),0,toInteger(salary))) ~> ReplaceNullWithValue",
						"ReplaceNullWithValue sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['replaceNull'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> LoadFile"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_Emp_Input')]",
				"[concat(variables('factoryId'), '/datasets/Ds_ouput_Copy')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD_TYPE_1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ScdType_Input",
								"type": "DatasetReference"
							},
							"name": "Employee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ScdType_SQL_output",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmpId as integer,",
						"          Name as string,",
						"          Country as string,",
						"          Department as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employee",
						"Employee alterRow(upsertIf(1==1)) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmpId as integer,",
						"          Name as string,",
						"          Country as string,",
						"          Department as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['EmpId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ScdType_Input')]",
				"[concat(variables('factoryId'), '/datasets/DS_ScdType_SQL_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Single_to_Multiple')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_single_multiple_input",
								"type": "DatasetReference"
							},
							"name": "EmployeeSkill"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ds_ouput_Copy",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "LS_AdlsGen2",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as short,",
						"          empname as string,",
						"          skill as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EmployeeSkill",
						"EmployeeSkill derive(skill = split(skill,',')) ~> derivedColumn1",
						"derivedColumn1 foldDown(unroll(skill),",
						"     mapColumn(",
						"          empid,",
						"          empname,",
						"          skill",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['single_to_multiple.txt'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_single_multiple_input')]",
				"[concat(variables('factoryId'), '/datasets/Ds_ouput_Copy')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AdlsGen2')]"
			]
		}
	]
}